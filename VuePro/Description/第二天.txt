今日任务：路由系统  vue-router

项目启动： 到项目目录下， 执行npm run serve
启动之后通过 localhost:8080 来进行访问

复习昨天内容：
使用vue4.0.4版本的脚手架，来新建项目.
vue create 项目名

讲解了vue基本项目的欢迎页面执行流程
1. 先执行 public/index.html 文件
2. vue默认带有webpack工具,运行时会自动打包所有ES6模块到一个js文件, 自动引入此js到index.html中
3. vue自带的webpack.config.js(默认不可见), 其中默认配置了主js文件为 main.js
4. main.js 文件中默认引入了App.vue 文件, 在App.vue中加载了各种小模块

举一反三, 把App.vue中的HelloWorld.vue模块 替换成我们自己的Header.vue模块, 又举一反三把Footer模块也添加进去了. 
又举一反三把首页 Index 模块也加载到页面中

===============================================
今日内容:
1. 图片问题:
-- 项目代码是拷贝过来的, 所以图片的路径会有变化, 需要人为进行修改.
其中 html代码中的图片 按照相对路径写法 添加 ../assets/ 前缀就可以显示了

但是 css 中的background 图片地址也添加前缀 ../assets/ 并不好用!! 

原因是: css会通过webpack进行打包, 要求css代码必须写在 vue 文件的 <style></style>标签中

vue文件的三个组成部分
<template><template>  专门写html
<script></script>  写js的
<style></style>    专门写css 的

==============================================
原始的网站是通过 超链接跳转页面 实现的多页网站
明显的缺点: 每次点击 都会跳转页面, 浏览器会整个刷新
有明显的闪烁过程.  用户体验极差.

因为此原因: ajax出现了, 可以做异步刷新, 只刷新页面的一部分, 不会整个页面闪烁.

jQuery中也集成了 ajax
Vue就模仿了ajax 这种异步加载的方式来加载html

我们当前的网站 头和脚是不变的, 变化的是中间部分

传统网站切换时: 路径末尾会不断变化成  xxx.html
对应不同的文件

vue网站切换时文件不变化, 只是多一个参数 #/页面名
类似于函数的参数, 传递不一样的参数 就出现不同的结果

#/页面名  这种切换方式, 必须用 vue-router 模块才能实现, 此模块称为路由模块
此处需要安装, 在项目下输入安装模块命令
npm install vue-router

压缩包: mypro_router

路由的关键代码有 两个标签 和 两个配置项

<router-view></router-view>
作用就是加载路由指定的vue组件

<router-link to="/路径"></router-link>
本质就是一个超链接, 可以推送指定组件到 路由视图上

配置
{
  path: "/路由的路径",
  component: 路由对应的组件
}

========================================
假设有这样一个配置
{
  path:"/news",
  component: "<template><div>你好</div></template>"
}

点击此超链接
<router-link to="/news">新闻</router-link>

就会自动把 <div>你好</div>
替换到
<router-view></router-view> 中

============================================
改造首页 Index 为路由模式
首先, 页面变化的部分是中间部分, 头脚不变.
把中间变化的部分 用路由代替, 即用 <router-view></router-view> 代替

到App.vue 中, 找到模板

===================================
路由需要一个专门的配置文件, 来记录所有路由相关的设置
新建文件
/src/routes/router.js

到 router.js 中填写相关的配置

路由中按照固定写法 把固定模板先写出来
然后自定义配置: 根目录 / 对应哪个组件

========================================
加载路由到 App.vue 中,  因为App.vue 中有 <router-view>

======================================
任务: 当点击头部的 关于净美仕 按钮时, 切换到关于页面

此按钮在 components/Header.vue 中
把关于净美仕按钮进行修改, 把它从a标签改成 路由要求的 <router-link> 标签

改造之后: to="/about"

此处需要跳转到 About.vue 组件
新建 src/pages/About.vue 
把 about.html 中的 头 和 脚 中间的html 代码
拷贝到 About.vue 的 template 中

到router.js 中配置, 把vue组件和 路由匹配到一起即可
{
  path: "/about",
  component: About
}

=========================================== 下节课 8:20
任务:
1. 点击首页会闪烁, 说明点击操作a 标签
所以需要到 Header.vue 中, 找到首页的a标签
改成 路由的 <router-link>标签, 点击跳转到 /

2. 尝试把 联系我们 也制作一下
-- 到Header.vue中找到 联系我们 超链接, 改造成 router-link
路径改为 /contact

-- 在pages/Contact.vue , 复制 contact.html 内容到此文件的template中

-- router.js 中, 把 /contact 和 Contact.vue 组件关联到一起

这样就可以实现点击操作了

============================================
右上角有注册和登录功能, 但是代码被注释了, 看不到
到 Header.vue 中, 把登录和注册功能的超链接的注释去掉
就可以看到对应的按钮了!

=========================================
作业: 按照上方的套路 显示出 
- 登录页面  /login
- 注册页面  /register
- 购物车    /cart
- 公司动态  /news      此页面的内容需要axios来加载
- 产品中心  /product   此页面需要axios加载

预告: 下一次任务
- 把首页的滚动栏制作出来
- 点击不同页面时, 要添加黄色背景显示样式
- 公司动态 使用axios来获取
- 公司的详情 使用axios来获取
- 注册 和 登录制作